##DESCRIPTION
##   
##ENDDESCRIPTION

##KEYWORDS('algebra', 'function', 'input', 'output', 'domain', 'rational function', 'radical function', 'operations')

## DBsubject('Algebra')
## DBchapter('Functions')
## DBsection('Compositions and combinations of functions')
## Date('6/4/2018')
## Author('K. Andrew Parker')
## Institution('City Tech')
## TitleText1('Precalculus')


########################################################################

DOCUMENT();      

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   "contextRationalFunction.pl",
   "contextFraction.pl"
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
# Set everything up in "Numeric" context
Context("Fraction");
Context()->noreduce('(-x)-y');

@word = ("zero","one","two","three","four","five","six","seven","eight","nine","ten");

$fB = random(2,5,1);
# determine what we want the quadratic radicand to look like _first_
do { $fogRootNumer = random(3,8,1); } until (gcf($fB,$fogRootNumer) != $fB);
$DoS = $fogRootNumer**2;
# break up the constant value from the composition (f o g)
do { $gC = random(-1*$DoS+1,-3,1); } until ( gcf($fB, abs($gC)) == $fB );
$fC = $DoS-abs($gC);
$gC = $gC/$fB;
$fB = -$fB;
$f = Formula("sqrt($fB x + $fC)")->reduce;
$fRoot = Fraction(-$fC,$fB)->reduce;

$gA = 0; #abs($fB); #TT: no quadratic term...
$gB = -1*random(2,5,1);
# the remainder from splitting the constant value of the composition
#$gC = abs($fC)-$DoS;
$g = Formula("($gB x + $gC)")->reduce;

# define the compositions as already simplified 
$gOffX = Formula("$gB*sqrt($fB x + $fC)+$gC")->reduce;
$fOfgX = Formula("sqrt(($fB)*($gB) x+($fB*$gC+$fC))")->reduce;

$fOfgRoot1 = Fraction(-1*($fB*$gC+$fC),$fB*$gB)->reduce;
$fOfgRoot2 = 3; #Fraction($fogRootNumer,$gA)->reduce;

Context("Interval");

$fOfgDom = Compute("[$fOfgRoot1,inf)");
$gOffDom = Compute("(-inf, $fRoot]");

##############################################################
#
#  Text
#
#

BEGIN_PGML

>> ### Composition of Functions ### <<





>> #### Practice #### <<

Let [` f(x) = [$f] `]  and   [` \displaystyle g(x) = [$g] `].

* You must combine all like terms before you submit your answer.
* You must expand all products before your submit your answer.
* Use _sqrt_ for the square root.

a. Simplify: [` (g \circ f)(x) = `][_____________________________]{$gOffX}

b. What is the domain of [` (g \circ f)(x) `]? [_____________________________]{$gOffDom}

d. Simplify: [` (f \circ g)(x) = `][_____________________________]{$fOfgX}

d. What is the domain of [` (f \circ g)(x) `]? [_____________________________]{$fOfgDom}


END_PGML

##############################################################
#
#  Answers
#
#

BEGIN_PGML_HINT

**To find the composition** 

* What is the _function_ you want to evaluate?
* What is the _input_?
* Plug the _input_ into the _function_.

**To find the domain of a composition**

* Find all [`x`]'s for which you can calculate the _input_.
* Find all [`x`]'s for which the _input_ belongs to the domain of the _function_.
* Find all [`x`]'s satisfying each one of the above restrictions.
* Do not use your algebraic simplication for the composition to find its domain.


END_PGML_HINT

##############################################################
#
#  Solutions
#
#

$gevalf = ($gB == 0)? "$gA (f(x))^2 + $gC" : 
"$gA(f(x))^2 + $gB (f(x)) + $gC";

$geval = Formula("$gA ($f)^2 + $gB ($f) + $gC")->reduce;

$ineq = ($fB >0)? "\geq" : "\leq";

$fDom = ($fB>0)? Compute("[$fRoot,inf)") : Compute("(-inf,$fRoot]") ;


BEGIN_PGML_SOLUTION


END_PGML_SOLUTION



ENDDOCUMENT();        
